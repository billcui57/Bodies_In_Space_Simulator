
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author billc
 */
public class Space extends javax.swing.JPanel {

    /**
     * Creates new form Space
     */
    public Space() {
        initComponents();
         bodies.add(sun);

    }
    Body sun = new Body(400,400,0,0,1000,true,this);
    Graphics g;
    ArrayList<Body> bodies = new ArrayList<Body>();
 
    public void paintComponent(Graphics g) {
        this.g = g;
        super.paintComponent(g);
        
        if(pressing){
            g.drawLine((int)beginx, (int)beginy, this.getMousePosition().x, this.getMousePosition().y);
            
        }
        
        for (int i = 0; i < bodies.size(); i++) {
            
            this.bodies.get(i).update();
            this.bodies.get(i).draw();
            
        }
        
        for(int i=0;i<bodies.size();i++){
           
                g.drawLine((int)this.bodies.get(i).x,(int) this.bodies.get(i).y,(int)sun.x ,(int)sun.y);
                g.drawString(String.valueOf((int)this.bodies.get(i).distanceFrom(sun)), (int)(sun.x+(this.bodies.get(i).x-sun.x)/2), (int)(sun.y+(this.bodies.get(i).y-sun.y)/2));
        }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(800, 800));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    double beginx;
    double beginy;
    double endx;
    double endy;
    boolean pressing;
    
    
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        pressing=true;
        beginx=evt.getX();
        beginy=evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        pressing=false;
        endx=evt.getX();
        endy=evt.getY();
        bodies.add(new Body(evt.getX(),evt.getY(),(beginx-endx)/5,(beginy-endy)/5,5,false,this));
    }//GEN-LAST:event_formMouseReleased

    Timer t1;

    public void timer() {
        t1 = new Timer(50, new TimerListener());
    }

    private class TimerListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Space.super.repaint();

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
